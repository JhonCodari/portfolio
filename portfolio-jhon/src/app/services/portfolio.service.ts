import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';
import { Project, Skill, ContactInfo } from '../interfaces/project.interface';
import { AboutValue, PersonalValue, TimelineItem } from '../interfaces/about.interface';

@Injectable({
  providedIn: 'root'
})
export class PortfolioService {

  constructor() { }

  private projects: Project[] = [
    // Projeto Portfolio (este projeto)
    {
      id: 1,
      title: 'Portfolio Pessoal',
      description: 'Portfolio pessoal desenvolvido com Angular 18+, utilizando standalone components e design responsivo. Apresenta projetos, habilidades t√©cnicas e informa√ß√µes profissionais de forma interativa e moderna.',
      shortDescription: 'Portfolio responsivo desenvolvido com Angular 18+ e componentes standalone.',
      technologies: ['Angular', 'TypeScript', 'SCSS', 'HTML5', 'CSS Grid', 'GitHub Pages'],
      githubUrl: 'https://github.com/JhonCodari/portfolio',
      liveUrl: 'https://jhoncodari.github.io/portfolio/',
      imageUrl: undefined,
      featured: true,
      category: 'frontend',
      status: 'completed',
      completedAt: new Date('2025-09-24'),
      highlights: [
        'Arquitetura 100% componentizada para reuso',
        'Design system consistente',
        'Anima√ß√µes e transi√ß√µes suaves',
        'Deploy automatizado via GitHub Actions'
      ]
    },

    // Exemplo de projeto Full Stack
    // {
    //   id: 2,
    //   title: 'Sistema de Gest√£o Empresarial',
    //   description: 'Sistema completo de gest√£o empresarial desenvolvido com Spring Boot no backend e Angular no frontend. Inclui m√≥dulos de vendas, estoque, financeiro e relat√≥rios avan√ßados.',
    //   shortDescription: 'ERP completo com Spring Boot e Angular, incluindo gest√£o de vendas e estoque.',
    //   technologies: ['Java', 'Spring Boot', 'Angular', 'PostgreSQL', 'Docker', 'JWT'],
    //   githubUrl: 'https://github.com/JhonCodari/sistema-gestao',
    //   liveUrl: undefined,
    //   imageUrl: undefined,
    //   featured: true,
    //   category: 'fullstack',
    //   status: 'completed',
    //   completedAt: new Date('2025-08-15'),
    //   highlights: [
    //     'API REST completa com documenta√ß√£o Swagger',
    //     'Sistema de autentica√ß√£o JWT',
    //     'Dashboard com gr√°ficos em tempo real',
    //     'Exporta√ß√£o de relat√≥rios em PDF/Excel'
    //   ]
    // },

    // Exemplo de projeto Mobile
    // {
    //   id: 3,
    //   title: 'App de Controle Financeiro',
    //   description: 'Aplicativo mobile para controle financeiro pessoal, desenvolvido com tecnologias h√≠bridas. Permite cadastro de receitas, despesas, metas financeiras e visualiza√ß√£o de relat√≥rios.',
    //   shortDescription: 'App m√≥vel para gest√£o financeira pessoal com relat√≥rios e gr√°ficos.',
    //   technologies: ['React Native', 'TypeScript', 'SQLite', 'Expo', 'Chart.js'],
    //   githubUrl: 'https://github.com/JhonCodari/finapp',
    //   liveUrl: undefined,
    //   imageUrl: undefined,
    //   featured: false,
    //   category: 'mobile',
    //   status: 'in-progress',
    //   completedAt: new Date('2025-10-30'),
    //   highlights: [
    //     'Interface intuitiva e responsiva',
    //     'Gr√°ficos interativos de gastos',
    //     'Sincroniza√ß√£o em nuvem',
    //     'Notifica√ß√µes de metas financeiras'
    //   ]
    // },

    // Exemplo de projeto Backend/API
    // {
    //   id: 4,
    //   title: 'API de E-commerce',
    //   description: 'API RESTful robusta para e-commerce, desenvolvida com Spring Boot. Inclui gest√£o de produtos, carrinho de compras, processamento de pagamentos e sistema de avalia√ß√µes.',
    //   shortDescription: 'API REST completa para e-commerce com Spring Boot e microservi√ßos.',
    //   technologies: ['Java', 'Spring Boot', 'MySQL', 'Redis', 'Docker', 'Swagger'],
    //   githubUrl: 'https://github.com/JhonCodari/ecommerce-api',
    //   liveUrl: undefined,
    //   imageUrl: undefined,
    //   featured: false,
    //   category: 'backend',
    //   status: 'completed',
    //   completedAt: new Date('2025-07-20'),
    //   highlights: [
    //     'Arquitetura de microservi√ßos',
    //     'Cache com Redis para performance',
    //     'Integra√ß√£o com gateway de pagamento',
    //     'Testes automatizados com JUnit'
    //   ]
    // },

    // Exemplo de projeto Web/Frontend
    // {
    //   id: 5,
    //   title: 'Dashboard Analytics',
    //   description: 'Dashboard interativo para an√°lise de dados empresariais, desenvolvido com React e D3.js. Apresenta m√©tricas de vendas, performance e KPIs atrav√©s de gr√°ficos din√¢micos.',
    //   shortDescription: 'Dashboard de analytics com React e visualiza√ß√µes de dados interativas.',
    //   technologies: ['React', 'D3.js', 'TypeScript', 'Material-UI', 'REST API'],
    //   githubUrl: 'https://github.com/JhonCodari/analytics-dashboard',
    //   liveUrl: 'https://analytics-demo.jhoncodari.com',
    //   imageUrl: undefined,
    //   featured: true,
    //   category: 'frontend',
    //   status: 'completed',
    //   completedAt: new Date('2025-06-10'),
    //   highlights: [
    //     'Visualiza√ß√µes de dados em tempo real',
    //     'Interface responsiva e moderna',
    //     'Filtros avan√ßados de dados',
    //     'Exporta√ß√£o de relat√≥rios customizados'
    //   ]
    // }
  ];

  private skills: Skill[] = [
    // Backend & Core
    { name: 'Java', level: 95, category: 'backend' },
    { name: 'Spring Framework', level: 90, category: 'backend' },
    { name: 'Spring Boot', level: 90, category: 'backend' },
    { name: 'Spring Security', level: 85, category: 'backend' },
    { name: 'Spring Data JPA', level: 85, category: 'backend' },

    // Cloud & DevOps
    { name: 'AWS', level: 85, category: 'tools' },
    { name: 'Docker', level: 80, category: 'tools' },
    { name: 'Kubernetes', level: 75, category: 'tools' },

    // Databases
    { name: 'MySQL', level: 85, category: 'database' },
    { name: 'PostgreSQL', level: 85, category: 'database' },
    { name: 'Redis', level: 80, category: 'database' },

    // Messaging & Integration
    { name: 'Apache Kafka', level: 80, category: 'tools' },
    { name: 'REST APIs', level: 95, category: 'backend' },

    // Version Control & Tools
    { name: 'Git/GitHub', level: 90, category: 'tools' },
    { name: 'GitLab', level: 85, category: 'tools' },

    // Frontend (Secondary skills)
    { name: 'Angular', level: 75, category: 'frontend' },
    { name: 'TypeScript', level: 80, category: 'frontend' },
    { name: 'JavaScript', level: 85, category: 'frontend' }
  ];

  private contactInfo: ContactInfo = {
    email: 'devjonatassilva@gmail.com',
    linkedin: 'https://linkedin.com/in/jhoncodari',
    github: 'https://github.com/JhonCodari',
    location: 'Cabo de Santo Agostinho - PE'
  };

  getProjects(): Observable<Project[]> {
    return of(this.projects);
  }

  getFeaturedProjects(): Observable<Project[]> {
    return of(this.projects.filter(project => project.featured));
  }

  getSkills(): Observable<Skill[]> {
    return of(this.skills);
  }

  getSkillsByCategory(category: string): Observable<Skill[]> {
    return of(this.skills.filter(skill => skill.category === category));
  }

  getContactInfo(): Observable<ContactInfo> {
    return of(this.contactInfo);
  }

  getCategoriesFilters(): Observable<any[]> {
    const categories = [
      { name: 'Frontend', key: 'frontend', icon: 'üé®' },
      { name: 'Backend', key: 'backend', icon: '‚öôÔ∏è' },
      { name: 'Full Stack', key: 'fullstack', icon: 'üöÄ' },
      { name: 'Mobile', key: 'mobile', icon: 'üì±' },
      { name: 'Web', key: 'web', icon: 'üåê' },
      { name: 'Desktop', key: 'desktop', icon: 'üñ•Ô∏è' }
    ];
    return of(categories);
  }

  getExperienceYears(): number {
    const startYear = 2020;
    const currentYear = new Date().getFullYear();
    return currentYear - startYear;
  }

  // Valores/estat√≠sticas da se√ß√£o About
  getAboutValues(): Observable<AboutValue[]> {
    const values: AboutValue[] = [
      { number: '3+', label: 'Anos de Experi√™ncia' },
      { number: '15+', label: 'Projetos Conclu√≠dos' },
      { number: '8+', label: 'Tecnologias' },
      { number: '100%', label: 'Dedica√ß√£o' }
    ];
    return of(values);
  }

  // Valores pessoais/profissionais
  getPersonalValues(): Observable<PersonalValue[]> {
    const values: PersonalValue[] = [
      {
        title: 'Excel√™ncia T√©cnica',
        description: 'Buscar a maestria em cada detalhe do meu trabalho, unindo conhecimento profundo, precis√£o na execu√ß√£o e aprimoramento constante para entregar solu√ß√µes s√≥lidas e de alto padr√£o.',
        icon: 'üéØ'
      },
      {
        title: 'Crescimento Cont√≠nuo',
        description: 'Buscar constantemente aperfei√ßoar minhas habilidades t√©cnicas, aplicando as melhores pr√°ticas e estudando novas tecnologias para entregar solu√ß√µes de qualidade.',
        icon: 'üöÄ'
      },
      {
        title: 'Impacto Positivo',
        description: 'Criar solu√ß√µes que facilitem a vida das pessoas e gerem valor real para a sociedade.',
        icon: 'üåü'
      },
      {
        title: 'Confiabilidade',
        description: 'Ser sincero, alegre e confi√°vel, construindo relacionamentos duradouros e significativos.',
        icon: 'ü§ù'
      }
    ];
    return of(values);
  }

  getTimelineData(): Observable<TimelineItem[]> {
    const timeline: TimelineItem[] = [
      {
        year: '2020',
        title: 'In√≠cio da Carreira',
        description: 'Apesar de j√° programar recreativamente desde os 12 anos de idade, considero que o ingresso na faculdade marcou o in√≠cio de minha jornada como desenvolvedor profissional, focando em Java e desenvolvimento web.'
      },
      {
        year: '2021',
        title: 'Migra√ß√£o de Carreira',
        description: 'Ingressei em uma das maiores consultorias de tecnologia do mundo para realizar meu est√°gio.'
      },
      {
        year: '2021',
        title: 'Especializa√ß√£o em Java',
        description: 'Aprofundei conhecimentos no ecossistema Spring e desenvolvimento de APIs robustas.'
      },
      {
        year: '2022',
        title: 'Efetiva√ß√£o na Consultoria',
        description: 'Fui efetivado como desenvolvedor na consultoria, atuando em projetos desafiadores como desenvolvedor j√∫nior.'
      },
      {
        year: '2022',
        title: 'Forma√ß√£o Acad√™mica',
        description: 'Conclu√≠ o curso de An√°lise e Desenvolvimento de Sistemas na Faculdade ELO, em Recife.'
      },
      {
        year: '2023',
        title: 'Certifica√ß√µes AWS',
        description: 'Obtive certifica√ß√µes AWS e comecei a aplicar conhecimentos de cloud computing em projetos.'
      },
      {
        year: '2023',
        title: 'Promo√ß√£o a desenvolvedor pleno',
        description: 'Fui promovido a desenvolvedor pleno na consultoria, assumindo mais responsabilidades e trabalhando em projetos com mais autonomia.'
      },
      {
        year: 'Hoje',
        title: 'Desenvolvedor Backend Pleno',
        description: 'Atualmente atuo como desenvolvedor backend pleno. Estou focado em desenvolver habilidades interpessoais, lideran√ßa, comunica√ß√£o clara, colabora√ß√£o em equipe e vis√£o estrat√©gica. Acredito que ser S√™nior vai al√©m do dom√≠nio t√©cnico: envolve saber compartilhar conhecimento, tomar decis√µes respons√°veis, apoiar o crescimento dos colegas e contribuir para um ambiente de trabalho saud√°vel e produtivo. Meu objetivo √© evoluir nessas compet√™ncias para assumir novos desafios e gerar impacto positivo por onde passar.',
        isPresent: true
      }
    ];
    return of(timeline);
  }
}
